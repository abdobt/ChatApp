<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        boSQAAAAAElFTkSuQmCC
</value>
  </data>
</root>